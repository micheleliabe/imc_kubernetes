apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app
  name: app
  namespace: app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app  
  strategy: {}
  template:
    metadata:
      labels:
        app: app
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "has-ssd"
                    operator: In
                    values: ["true"]
      containers:
        - name: labs
          image: micheldiasdocker/labs:appV6
          imagePullPolicy: Always
          securityContext:
            readOnlyRootFilesystem: false #Desativado por conta dos logs do new_relic
            allowPrivilegeEscalation: false
            runAsUser: 1000
            runAsNonRoot: true
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: "/"
              port: 3000
            initialDelaySeconds: 30
          livenessProbe:
            httpGet:
              path: "/healthz"
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 2
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "100m"
              memory: "256Mi"
      imagePullSecrets:
        - name: regcred
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: app
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: has-ssd
                  operator: In
                  values:
                  - "true"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 2
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - "nginx"
                topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "reserved"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

      containers:
        - name: nginx
          image: nginx:latest
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 100m
              memory: 500Mi
          ports:
            - containerPort: 80
              name: nginx
